import React , { useState } from 'react';
import Panel from '@vkontakte/vkui/dist/components/Panel/Panel';
import PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';
import Button from '@vkontakte/vkui/dist/components/Button/Button';
import ModalRoot from '@vkontakte/vkui/dist/components/ModalRoot/ModalRoot';
import ModalCard from '@vkontakte/vkui/dist/components/ModalCard/ModalCard';
import Group from '@vkontakte/vkui/dist/components/Group/Group';
import Cell from '@vkontakte/vkui/dist/components/Cell/Cell';
import Div from '@vkontakte/vkui/dist/components/Div/Div';
import Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';
import View from '@vkontakte/vkui/dist/components/View/View';
import PanelHeaderBack from '@vkontakte/vkui/dist/components/PanelHeaderBack/PanelHeaderBack';
import Counter from '@vkontakte/vkui/dist/components/Counter/Counter';
import Card from '@vkontakte/vkui/dist/components/Card/Card';
import List from '@vkontakte/vkui/dist/components/List/List';
import Snackbar from '@vkontakte/vkui/dist/components/Snackbar/Snackbar';
import '@vkontakte/vkui/dist/vkui.css';
import Butt from "./img/button.png"
import Bg from "./img/bg.png"
import bridge from '@vkontakte/vk-bridge';
import Icon24Replay from '@vkontakte/icons/dist/24/replay';
import Icon24DoneOutline from '@vkontakte/icons/dist/24/done_outline';
import Icon56ErrorOutline from '@vkontakte/icons/dist/56/error_outline';
import "./style.css"
import Icon16Done from '@vkontakte/icons/dist/16/done';

const App = () => {
	const [ activeModal , setModal ] = useState(null);
	const [ panel, setPanel ] = useState("app");
	const [ sub , setSub ] = useState(true);
	const [ snack, setSnack ] = useState(null);

	const modals =
	<ModalRoot activeModal={activeModal}>
	<ModalCard
          id="first"
					icon={<Icon56ErrorOutline style={{color: 'var(--destructive)'}}/>}
          onClose={() => setModal(null)}
          header="–ê—Ç–µ–Ω—à–Ω!"
          actions={[{
            title: '–ü–æ–Ω—è–ª(–∞)',
            mode: 'destructive',
            action: () => {
							bridge.send("VKWebAppAllowMessagesFromGroup", {"group_id": 138292893}).then(() => {
							bridge.send("VKWebAppShowStoryBox", {"background_type":"image","url":`https://i.ibb.co/Qp7gJ5b/bg.png`,"locked":true,"stickers":[{"sticker_type":"renderable","sticker":{"content_type":"image","url":`https://i.ibb.co/j5zKFrX/button.png`,"clickable_zones":[{"action_type":"link","action":{"link":"https://vk.com/vk_cake","tooltip_text_key":"tooltip_open_link"},"clickable_area":[{"x":0,"y":0},{"x":584,"y":0},{"x":584,"y":130},{"x":0,"y":130}]}]}}]})
							.then(() => {
								bridge.send("VKWebAppSendPayload", {"group_id": 138292893,"payload": {"foo": "bar"}})
								setModal(null)
								setSnack(
									<Snackbar
        					layout="vertical"
        					onClose={setSnack(null)}
        					before={<Avatar size={24} style={{backgroundColor: 'var(--accent)'}}><Icon16Done fill="#fff" width={14} height={14} /></Avatar>}
      						>
        –ò—Å—Ç–æ—Ä–∏—è –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞.
      </Snackbar>
								)
							})
							.catch(() => {
								setPanel("error")
								setModal(null)
							})
						})
						}
          }]}
        >
				<Div>
				<td dangerouslySetInnerHTML={{__html: "–°–µ–π—á–∞—Å —Ç–µ–±–µ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å–µ–±–µ –∏—Å—Ç–æ—Ä–∏—é —Å —Ä–µ–ø–æ—Å—Ç–æ–º –≥—Ä—É–ø–ø—ã, –ø–æ—Å–ª–µ —á–µ–≥–æ —Ç—ã –ø–æ–ª—É—á–∏—à—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –≤ –õ–°.</br></br>2 –º–∞—Ä—Ç–∞ –≤ 12:00 –ú–°–ö –º—ã –º–µ—Ç–æ–¥–æ–º —Ä–∞–Ω–¥–æ–º–∞ –≤—ã–±–µ—Ä–µ–º –æ–¥–Ω–æ–≥–æ –ø–æ–±–µ–¥–∏—Ç–µ–ª—è.</br><b>–ù–µ –∑–∞–±—ã–≤–∞–π:</b> –º—ã –ø—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ —É—Å–ª–æ–≤–∏—è üòè"}}/>
				</Div>
        </ModalCard>
	</ModalRoot>

	return (
		<View activePanel={panel} modal={modals}>

		<Panel id="app">
			<PanelHeader>–ö–æ–Ω–∫—É—Ä—Å</PanelHeader>
		<Div>
		 <Button before={<Icon24DoneOutline/>} size="xl" onClick={() => setModal('first')} mode="secondary">–£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å</Button>
	 </Div>
	 { sub === true ?
	 <Div>
	 <Card mode="shadow">
	 <Group>
	 <Div>
	 –ù–µ –∑–∞–±—ã–≤–∞–π, —á—Ç–æ–±—ã —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –∫–æ–Ω–∫—É—Ä—Å–µ, –Ω—É–∂–Ω–æ –±—ã—Ç—å –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–º –Ω–∞ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ ‚úÖ
	 </Div>
	 </Group>
	 <Group>
	 <Cell
		 bottomContent={<Button onClick={() => {
			 bridge.send("VKWebAppJoinGroup", {"group_id": 138292893})
			 .then(() => setSub(false))
		 }}>–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è</Button>}
		 before={<Avatar src="https://sun9-28.userapi.com/c850032/v850032452/178679/BcA0L1O__Hg.jpg" size={80}/>}
		 size="l">
	 VK Cake
	 </Cell>
	 </Group>
	 </Card>
	 </Div> : null}
	 {snack}
	</Panel>

	<Panel id="error">
		<PanelHeader left={<PanelHeaderBack onClick={() => setPanel('app')}/>}><font color="red">–û—à–∏–±–∫–∞</font></PanelHeader>
			<Group>
				<Div>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞! –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã –æ—à–∏–±–∫–∏:</Div>
				</Group>
				<Group>
				<List>
				<Cell indicator={<Counter mode="prominent">1</Counter>}>–í—ã –≤–æ—à–ª–∏ —á–µ—Ä–µ–∑ –≤–µ–± –≤–µ—Ä—Å–∏—é.</Cell>
				<Cell multiline indicator={<Counter mode="prominent">2</Counter>}>–í—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –Ω–µ–æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∫–ª–∏–µ–Ω—Ç.</Cell>
				<Cell indicator={<Counter mode="prominent">3</Counter>}>–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫—É –∏—Å—Ç–æ—Ä–∏–∏.</Cell>
				</List>
				<Div>
				<Button before={<Icon24Replay/>} size="xl" onClick={() => {
					setPanel("app")
					setModal("first")
				}}>–í–µ—Ä–Ω—É—Ç—å—Å—è</Button>
				</Div>
				</Group>
		</Panel>
	</View>
	);
};

export default App;
